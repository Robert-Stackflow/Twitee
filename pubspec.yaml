name: twitee
version: 0.0.1+1
description: An awesome two-factor authenticator which supports cloud storage and multiple platforms.
publish_to: none

environment:
  sdk: '>=3.1.4 <4.0.0'

dependencies:
  flutter:
    sdk: flutter
  flutter_localizations:
    sdk: flutter
  # 控件
  animations: ^2.0.11 # 动画
  fluttertoast: ^8.2.6 # 吐司
  lottie: ^3.1.2 # Lottie动画
  nine_grid_view: ^2.0.0 # 九宫格
  modal_bottom_sheet: ^3.0.0 # 底部弹窗
  palette_generator: ^0.3.3+3 # 获取主色调
  vector_math: ^2.1.4 # 矢量数学
  path_drawing: ^1.0.1 # 路径绘制
  auto_size_text: ^3.0.0 # 自适应文本
  flutter_inappwebview: ^6.0.0 # Webview
  flutter_widget_from_html: ^0.15.2 # 将HTML渲染成组件
  cached_network_image: ^3.4.1 # 缓存网络图片
  flutter_slidable:
    path: third-party/flutter_slidable
  group_button:
    path: third-party/group_button
  context_menus:
    path: third-party/context_menus
  pinput:
    path: third-party/pinput
  # 存储
  path:
  path_provider: ^2.0.12
  file_picker: ^8.0.6 # 文件选择
  hive: ^4.0.0-dev.2 # 轻量存储
  archive: ^3.6.1 # 压缩
  isar_flutter_libs: ^4.0.0-dev.13
  image_gallery_saver: ^2.0.3 # 保存图片
  # 网络
  http: ^1.2.1
  dio: ^5.4.3+1 # 网络请求
  dio_cache_interceptor: ^3.5.0 # dio缓存
  dio_cookie_manager: ^3.1.1 # dio cookie管理
  flutter_cache_manager: ^3.3.1 # 缓存管理
  # 工具
  intl_utils: ^2.8.7
  html: ^0.15.0
  uuid: ^4.4.2 # UUID
  logger: ^2.4.0 # 日志
  hashlib: 1.19.2 # Hash
  pointycastle: ^3.9.1 # 加密
  flutter_native_splash: ^2.4.1 # Splash屏
  pretty_qr_code: ^3.3.0 # 二维码
  local_proxy: ^0.0.3 # 系统代理
  # 系统
  provider: ^6.0.5 # 状态管理
  local_auth: ^2.2.0 # 指纹验证
  local_auth_android: ^1.0.42 # 指纹验证
  package_info_plus: ^8.0.0 # 应用信息
  device_info_plus: ^10.1.0 # 设备信息
  share_plus: ^10.0.2 # 分享
  protocol_handler: ^0.2.0 # 协议处理
  url_launcher: ^6.3.0 # URL跳转
  biometric_storage:
    path: third-party/biometric_storage
  # 平台适配
  saf:
    path: third-party/saf
  handy_window: ^0.4.0
  native_device_orientation: ^2.0.3 # 设备方向
  process_run: ^1.0.0+1 # 运行
  restart_app: ^1.2.1 # 重启APP
  tray_manager: ^0.2.3 # 托盘图标
  hotkey_manager: ^0.2.3 # 热键
  install_plugin: ^2.1.0 # 安装APP
  permission_handler: ^10.2.0 # 权限管理
  responsive_builder: ^0.7.1 # 响应式布局
  flutter_displaymode: ^0.6.0 # 设置刷新率
  flutter_local_notifications: ^17.2.1+2 # 本地通知
  flutter_resizable_container: ^2.0.0 # 可调整大小的容器
  screen_protector: ^1.4.2+1
  flutter_windowmanager: ^0.2.0
  move_to_background: ^1.0.2 # 移动到后台
  launch_at_startup: ^0.3.1 # 开机启动
  local_notifier: ^0.1.6 # 本地通知
  shell_executor: ^0.1.6 # 执行命令
  window_manager:
    path: third-party/window_manager
#  desktop_multi_window:
#    path: third-party/desktop_multi_window
  # OpenAPI
  freezed_annotation: ^2.4.4 # JSON序列化
  json_annotation: ^4.9.0 # JSON序列化
  retrofit: ^4.4.1 # 网络请求

dependency_overrides:
  webview_flutter_android: 3.16.1

dev_dependencies:
  flutter_test:
    sdk: flutter
  build_runner: ^2.4.12
  flutter_lints: ^4.0.0
  msix: ^3.16.7
  sqflite_common_ffi: ^2.3.3
  flutter_launcher_icons: ^0.13.1
  # OpenAPI
  json_serializable: ^6.7.1
  freezed: ^2.5.7
  swagger_parser:
    path: third-party/swagger_parser/swagger_parser
  retrofit_generator: ^9.1.2

swagger_parser:
  schema_path: tools/schemes/compatible.yaml

  # Sets the url of the OpenApi schema.
  schema_url: https://petstore.swagger.io/v2/swagger.json

  # Required. Sets output directory for generated files (Clients and DTOs).
  output_directory: lib/Openapi

  # Optional. Set API name for folder and export file
  # If not specified, the file name is used.
  name: null

  # Optional. Sets the programming language.
  # Current available languages are: dart, kotlin.
  language: dart

  # Optional (dart only).
  # Current available serializers are: json_serializable, freezed, dart_mappable.
  json_serializer: json_serializable

  # Optional. Set default content-type for all requests.
  default_content_type: "application/json"

  # Optional (dart only).
  # Support @Extras annotation for interceptors.
  # If the value is 'true', then the annotation will be added to all requests.
  extras_parameter_by_default: false

  # Optional (dart only).
  # Support @DioOptions annotation for interceptors.
  # If the value is 'true', then the annotation will be added to all requests.
  dio_options_parameter_by_default: false

  # Optional (dart only). Set 'true' to generate root client
  # with interface and all clients instances.
  root_client: true

  # Optional (dart only). Set root client name.
  root_client_name: RestClient

  # Optional (dart only). Set 'true' to generate export file.
  export_file: true

  # Optional. Set to 'true' to put the all api in its folder.
  put_in_folder: false

  # Optional. Set 'true' to put all clients in clients folder.
  put_clients_in_folder: false

  # Optional. Set to 'true' to squash all clients in one client.
  merge_clients: false

  # Optional. Set postfix for Client class and file.
  client_postfix: Client

  # Optional. Set 'true' to use only the endpoint path for the method name.
  # Set 'false' to use operationId
  path_method_name: false

  # Optional (dart only). Set 'true' to include toJson() in enums.
  # If set to false, serialization will use .name instead.
  enums_to_json: false

  # Optional. Set 'true' to set enum prefix from parent component.
  enums_parent_prefix: true

  # Optional (dart only). Set 'true' to maintain backwards compatibility
  # when adding new values on the backend.
  unknown_enum_value: true

  # Optional. Set 'false' to not put a comment at the beginning of the generated files.
  mark_files_as_generated: true

  # Optional (dart only). Set 'true' to wrap all request return types with HttpResponse.
  original_http_response: false

  # Optional. Set regex replacement rules for the names of the generated classes/enums.
  # All rules are applied in order.
  replacement_rules:
    # Example of rule
    - pattern: "[0-9]+"
      replacement: ""

  # Optional. Skip parameters with names.
  skipped_parameters:
    - 'X-Some-Token'

msix_config:
  display_name: Twitee
  publisher: CN=Cloudchewie
  publisher_display_name: Cloudchewie
  identity_name: com.cloudchewie.twitee
  msix_version: 2.4.5.0
  logo_path: assets\logo-transparent.ico
  trim_logo: false
  languages: en, ja-jp, zh-cn, zh-tw
  protocol_activation: twitee
  execution_alias: twitee
  enable_at_startup: true
  output_path: build\windows\outputs
  output_name: Twitee
  build_windows: false
  capabilities: internetClient
  certificate_path: D:\Repositories\Twitee\certificate\twitee.pfx
  certificate_password: CLOUDCHEWIEtwitee@123

flutter_launcher_icons:
  android: false
  ios: true
  image_path: "assets/logo.png"
  web:
    generate: false
  windows:
    generate: false
  macos:
    generate: true
    image_path: "assets/logo-transparent.png"

flutter_native_splash:
  color: "#FFFFFF"
  color_dark: "#111111"
  image: "assets/logo-transparent.png"
  android: true
  ios: true

  android_12:
    image: assets/logo-transparent.png
    icon_background_color: "#FFFFFF"
    image_dark: assets/logo-light-transparent.png
    icon_background_color_dark: "#111111"

flutter_intl:
  enabled: true

flutter:
  uses-material-design: true
  assets:
    - assets/lottie/
    - assets/icon/
    - assets/avatar.png
    - assets/logo.png
    - assets/logo.svg
    - assets/logo-transparent.svg
    - assets/logo-transparent.png
    - assets/logo-transparent.ico
    - assets/logo-light.png
    - assets/logo-light.svg
    - assets/logo-light-transparent.svg
    - assets/logo-light-transparent.png
    - assets/logo-light-transparent.ico
    - assets/logo-round.png
    - assets/logo-round.ico